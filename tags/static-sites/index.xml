<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>static sites on wangqj-blog</title>
    <link>http://balaramadurai.github.io/tags/static-sites/</link>
    <description>Recent content in static sites on wangqj-blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://balaramadurai.github.io/tags/static-sites/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ExtJs 监听创建与触发</title>
      <link>http://balaramadurai.github.io/post/this-post-has-no-body/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/post/this-post-has-no-body/</guid>
      <description>EXT 是一种用JavaScript编写的功能强大的Ajax框架，可用于开发绚丽多彩的富客户端Ajax应用。天生拥有绚丽的外表，它的优点是良好的表格，表单等控件，界面美观，适合OA类项目的数据展示。
 ​	在实际的开发中，不同的panel之间需要进行传值，子panel面板与父panel面板之间的参数传递，可以将整个panel作为参数进行传递，随着结构的复杂，会出现多个panel间的传值，相对比较混乱，因此，需要借助监听和触发来传递所需要的参数。记录下来，方便以后查看。 遵循的原则是：谁创建谁监听，在创建的地方添加监听。 下面举例说明一下如何实现监听和触发。 第一步、fireEvent方法添加触发
// me代表着作用域范围 var me = this; //第一种：往上一级面板传递参数 transData是自定义传递的名称 nodeData表示需要传递的参数 me.fireEvent(&amp;#34;transData&amp;#34;,nodeData); //第二种：继续往上传递 me.fireEvent(&amp;#34;transData&amp;#34;,function( me.fireEvent(&amp;#34;transToData&amp;#34;,nodeData); ) }); 第二步、添加监听 格式为：panel.on(&amp;ldquo;触发的方法&amp;rdquo;，调用的方法，this);
// me代表着作用域范围 监听transData的方法 var panel = Ext.create(&amp;#34;ext.panel&amp;#34;); panel.on(&amp;#34;transData&amp;#34;,this.nodeClick,this); //调用触发的方法 nodeClick : function(){ var me= this; Ext.Msg.alert(&amp;#34;提示&amp;#34;,&amp;#34;触发方法添加成功!&amp;#34;); }, 博客参考： 【1】W3Cschool:https://www.w3cschool.cn/extjs/extjs_overview.html</description>
    </item>
    
  </channel>
</rss>