<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wangqj on wangqj-blog</title>
    <link>http://balaramadurai.github.io/author/wangqj/</link>
    <description>Recent content in wangqj on wangqj-blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://balaramadurai.github.io/author/wangqj/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>excel数据验证</title>
      <link>http://balaramadurai.github.io/blog/18-excel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/18-excel/</guid>
      <description>excel 作为强大的办公软件，在数据处理、维护方面具有强大的生命力，在输入中可以通过数据验证来设置可选区域，减少数据录入时出错的概率。
  在定制系统输入的模板时，使用到excel的数据验证功能，用到的可选项比较多，超出了序列的长度，需要处理换一种读取的方式。这里记录下来，方便备查。 为了防止数据录入错误，方便数据库数据的匹配，直接在下拉菜单中选择对应的项目即可。如下图所示。 第一步、数据验证 选中需要选择的列，数据 &amp;ndash;&amp;gt; 数据验证，选择第一个数据验证选项，进行设置。 第二步、设置验证条件 主要分为两种情况
第一种 选择 允许序列，来源：即输入需要选择的内容，各选项用逗号隔开。注意：序列的长度是有限制，超过会无法进行保存。 第二种 对于选项比较多的，如国籍，出生地等码值多的，设置其为选项也无法写到序列中，怎么处理呢？将选项放到一列，设置公式来读取这列做为选项。 有两种方式：放在同一个sheet和单独存放带一个sheet中。 1、将选项放到同一个sheet 在同一个sheet中可以选中该列，右键 &amp;ndash; &amp;gt; 隐藏，即不显示H列
2、将选项放到其他sheet 注意：设置的公式有所区别，需要有sheet的信息，参照下图所示。  $ 在excel中的作用： excel 单元格有绝对引用、相对引用和混合引用，均用 $ 表示，三者的区别： $ 在谁前面，谁不动。 一个单元格地址有两部分组成：一个是字母（代表列数），一个是数回字（代表行数）。 注：这里是给字母和数字前面都加上了$，读取的都是设置区域固定的内容，如果只是给字母添加，列不变，但行数会变，读取的内容会动态变化。
 博客来源 【1】https://jingyan.baidu.com/article/0964eca26da8bd8285f536ab.html</description>
    </item>
    
    <item>
      <title>Ext tree 节点的新增和移除</title>
      <link>http://balaramadurai.github.io/blog/15-exttree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/15-exttree/</guid>
      <description>ExtTree 树是一种比较紧密的数据类型，上下级节点之间具有联系。
 最近在用Extjs树，实现了机构下面挂人，现在需要对选中人员可以进行移除和新增操作。查询API发现，获取父级节点，调用 removeChild 和 appendChild方法可以实现增删，这里记录下来，方便备查。 Ext 树创建的js程序代码
Ext.define(&amp;#34;Ext.Demo.Panel&amp;#34;, { extend : &amp;#34;Ext.tree.Panel&amp;#34;, rootVisible : false, urlSrc : &amp;#34;/rygl/syd/load?theme=none&amp;#34;, initComponent : function() { var me = this; var store = this.createTreeStore(urlsrc); this.store = store; this.callParent(arguments); }, //创建树节点的store 	createTreeStore : function(urlstr) { var me = this; var treeStore = Ext.create(&amp;#39;Ext.data.TreeStore&amp;#39;, { //autoLoad : true, 	fields : [//叶子model属性，可扩展 	{ name : &amp;#39;id&amp;#39; }, { name : &amp;#39;text&amp;#39; }, { name : &amp;#39;leaf&amp;#39; }, proxy : { type : &amp;#39;ajax&amp;#39;, url : urlstr, reader : { type : &amp;#39;json&amp;#39;, root : &amp;#39;DT&amp;#39; } }, sorters : [{ property : &amp;#39;pindex&amp;#39;, direction : &amp;#39;ASC&amp;#39; }], root : { nodeType : &amp;#39;async&amp;#39;, text : me.</description>
    </item>
    
    <item>
      <title>ext-button</title>
      <link>http://balaramadurai.github.io/blog/19-ext-button-copy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/19-ext-button-copy/</guid>
      <description>ext button 按钮是页面常用的控件，利用ext的自带的按钮可以直接引用。
 最近在使用Ext按钮样式的风格，发现其提供了几种按钮样式的写法，显示效果也会有一定的差别，下面记录下来，方便之后的查看。
1、创建按钮 &amp;ndash; button Ext 可以直接创建单个的按钮对象，设置按钮的名称，大小，宽度等属性，属性的参数直接写在大括号中即可。
var confirm = Ext.create(&amp;#34;Ext.Button&amp;#34;, { text : &amp;#34;确定&amp;#34;, width : 60, bodyStyle : &amp;#34;padding-bottom: 60px;&amp;#34;, margin : 5, handler : Ext.bind(me.Confirm, me) }); handler 绑定按钮的事件，点击调用的js方法。按钮的样式如下图所示。字体与边框的间隔适中，看着比较美观。 2、创建按钮 &amp;ndash; toolbar 定义一个Toolbar，将其放到 dockedItems 中可以在border布局的上方显示横条的工具条。多个按钮的信息，写在 items 属性中，如符号：&#39;-&amp;gt;&amp;rsquo; 表示靠右对齐，cls 属性可以引用css定义的样式效果。
var toolbar = Ext.create(&amp;#34;Ext.Toolbar&amp;#34;, { border : true, items : [&amp;#39;-&amp;gt;&amp;#39;,{ text : &amp;#34;确定&amp;#34;, cls : &amp;#34;myself-toolbarbtn&amp;#34;, handler : Ext.bind(this.Confirm, this) },{ text : &amp;#34;取消&amp;#34;, cls : &amp;#34;myself-toolbarbtn&amp;#34;, handler : Ext.</description>
    </item>
    
    <item>
      <title>ext-button</title>
      <link>http://balaramadurai.github.io/blog/19-ext-button/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/19-ext-button/</guid>
      <description>ext button 按钮是页面常用的控件，利用ext的自带的按钮可以直接引用。
 最近在使用Ext按钮样式的风格，发现其提供了几种按钮样式的写法，显示效果也会有一定的差别，下面记录下来，方便之后的查看。
1、创建按钮 &amp;ndash; button Ext 可以直接创建单个的按钮对象，设置按钮的名称，大小，宽度等属性，属性的参数直接写在大括号中即可。
var confirm = Ext.create(&amp;#34;Ext.Button&amp;#34;, { text : &amp;#34;确定&amp;#34;, width : 60, bodyStyle : &amp;#34;padding-bottom: 60px;&amp;#34;, margin : 5, handler : Ext.bind(me.Confirm, me) }); handler 绑定按钮的事件，点击调用的js方法。按钮的样式如下图所示。字体与边框的间隔适中，看着比较美观。 2、创建按钮 &amp;ndash; toolbar 定义一个Toolbar，将其放到 dockedItems 中可以在border布局的上方显示横条的工具条。多个按钮的信息，写在 items 属性中，如符号：&#39;-&amp;gt;&amp;rsquo; 表示靠右对齐，cls 属性可以引用css定义的样式效果。
var toolbar = Ext.create(&amp;#34;Ext.Toolbar&amp;#34;, { border : true, items : [&amp;#39;-&amp;gt;&amp;#39;,{ text : &amp;#34;确定&amp;#34;, cls : &amp;#34;myself-toolbarbtn&amp;#34;, handler : Ext.bind(this.Confirm, this) },{ text : &amp;#34;取消&amp;#34;, cls : &amp;#34;myself-toolbarbtn&amp;#34;, handler : Ext.</description>
    </item>
    
    <item>
      <title>Ext监听</title>
      <link>http://balaramadurai.github.io/blog/00-ext/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/00-ext/</guid>
      <description>EXT 是一种用JavaScript编写的功能强大的Ajax框架，可用于开发绚丽多彩的富客户端Ajax应用。天生拥有绚丽的外表，它的优点是良好的表格，表单等控件，界面美观，适合OA类项目的数据展示。
 ​	在实际的开发中，不同的panel之间需要进行传值，子panel面板与父panel面板之间的参数传递，可以将整个panel作为参数进行传递，随着结构的复杂，会出现多个panel间的传值，相对比较混乱，因此，需要借助监听和触发来传递所需要的参数。记录下来，方便以后查看。 遵循的原则是：谁创建谁监听，在创建的地方添加监听。 下面举例说明一下如何实现监听和触发。 第一步、fireEvent方法添加触发
// me代表着作用域范围 var me = this; //第一种：往上一级面板传递参数 transData是自定义传递的名称 nodeData表示需要传递的参数 me.fireEvent(&amp;#34;transData&amp;#34;,nodeData); //第二种：继续往上传递 me.fireEvent(&amp;#34;transData&amp;#34;,function( me.fireEvent(&amp;#34;transToData&amp;#34;,nodeData); ) }); 第二步、添加监听 格式为：panel.on(&amp;ldquo;触发的方法&amp;rdquo;，调用的方法，this);
// me代表着作用域范围 监听transData的方法 var panel = Ext.create(&amp;#34;ext.panel&amp;#34;); panel.on(&amp;#34;transData&amp;#34;,this.nodeClick,this); //调用触发的方法 nodeClick : function(){ var me= this; Ext.Msg.alert(&amp;#34;提示&amp;#34;,&amp;#34;触发方法添加成功!&amp;#34;); }, 博客参考： 【1】W3Cschool:https://www.w3cschool.cn/extjs/extjs_overview.html</description>
    </item>
    
    <item>
      <title>Ext监听</title>
      <link>http://balaramadurai.github.io/post/00-ext/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/post/00-ext/</guid>
      <description>EXT 是一种用JavaScript编写的功能强大的Ajax框架，可用于开发绚丽多彩的富客户端Ajax应用。天生拥有绚丽的外表，它的优点是良好的表格，表单等控件，界面美观，适合OA类项目的数据展示。
 ​	在实际的开发中，不同的panel之间需要进行传值，子panel面板与父panel面板之间的参数传递，可以将整个panel作为参数进行传递，随着结构的复杂，会出现多个panel间的传值，相对比较混乱，因此，需要借助监听和触发来传递所需要的参数。记录下来，方便以后查看。 遵循的原则是：谁创建谁监听，在创建的地方添加监听。 下面举例说明一下如何实现监听和触发。 第一步、fireEvent方法添加触发
// me代表着作用域范围 var me = this; //第一种：往上一级面板传递参数 transData是自定义传递的名称 nodeData表示需要传递的参数 me.fireEvent(&amp;#34;transData&amp;#34;,nodeData); //第二种：继续往上传递 me.fireEvent(&amp;#34;transData&amp;#34;,function( me.fireEvent(&amp;#34;transToData&amp;#34;,nodeData); ) }); 第二步、添加监听 格式为：panel.on(&amp;ldquo;触发的方法&amp;rdquo;，调用的方法，this);
// me代表着作用域范围 监听transData的方法 var panel = Ext.create(&amp;#34;ext.panel&amp;#34;); panel.on(&amp;#34;transData&amp;#34;,this.nodeClick,this); //调用触发的方法 nodeClick : function(){ var me= this; Ext.Msg.alert(&amp;#34;提示&amp;#34;,&amp;#34;触发方法添加成功!&amp;#34;); }, 博客参考： 【1】W3Cschool:https://www.w3cschool.cn/extjs/extjs_overview.html</description>
    </item>
    
    <item>
      <title>ifream src 绑定中文PDF时，出现404找不到</title>
      <link>http://balaramadurai.github.io/blog/14-encode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/14-encode/</guid>
      <description>encode 浏览器在对url解析时自动进行解码
 背景：前端ext框架，定义Container，html上添加ifream，对其src属性指定非中文名字的 pdf文件（如test.pdf），可以正常展示，当返回的文件名称是中文（如测试.pdf）时，出现404找不到的错误。
var roserForm = Ext.create(&amp;#39;Ext.container.Container&amp;#39;,{ height : 370, id : &amp;#39;roserFromID&amp;#39;, html : &amp;#39;&amp;lt;iframe id=&amp;#34;roserForm&amp;#34; name=&amp;#34;roserForm&amp;#34; src=&amp;#34;&amp;#34; style=&amp;#34;width:100%; height:100%;&amp;#34; frameborder=&amp;#34;0&amp;#34;&amp;gt;&amp;lt;/iframe&amp;gt;&amp;#39; }); pdf文件名称为非中文时，通过jquery的attr来对src进行绑定，页面的展示是正常的。
$(&amp;#34;#roserForm&amp;#34;).attr(&amp;#34;src&amp;#34;,data.pdf); 网上查看资料后，了解到 http get请求不能传输中文参数问题，浏览器主要是解码的过程。
 网络请求中，对中文字段需要编码和解码，这里Java后台需要对中文文件名称进行编码，传递给前台编码后的字符串(application/x-www-form-urlencoded)，浏览器直接会进行解码，从而读取出相应的文件。
 Java后台处理编码，需要引入 java.net.URLEncoder，用encode对中文字符进行编码。
import java.net.URLEncoder; //对pdf文件名称进行编码 String PDFName = URLEncoder.encode(“测试”,&amp;#34;utf-8&amp;#34;）; System.out.println(&amp;#34;编码的结果是：&amp;#34;+ PDFName); 控制台输出的结果
编码的结果是：%E6%B5%8B%E8%AF%95 用 decode 对中文字符进行解码。
//对pdf文件名称进行解码 String PDFName = ‘%E6%B5%8B%E8%AF%95’; String decode = URLDecoder.decode(PDFName , &amp;#34;utf-8&amp;#34;); System.out.println(&amp;#34;解码的结果是：&amp;#34;+decode); 控制台输出的结果
解码的结果是： 测试 将编码后的文件名称存放到数据库中，需要的时候取值进行读取即可。 博客参考 【1】https://blog.csdn.net/BD_fuhong/article/details/91598920</description>
    </item>
    
    <item>
      <title>java Aspose&#43;PDFObject</title>
      <link>http://balaramadurai.github.io/blog/13-aspose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/13-aspose/</guid>
      <description>Aspose office文档处理软件,需要付费，网上也有破解的java包，使用比较方便。
 最近系统中想做个页面的展示和下载的功能，正好公司购买了Aspose （收费）软件，简单的实现方案是Aspose + PDFObect 将excel转成pdf，直接使用插件来实现预览和下载。记录下来，方便备查！
一、excel 转 PDF Aspose 适合办公文档的操作，如excel转pdf，word转pdf，excel数据导出，只需要简单的操作就能够实现功能。以下通过Java中的文件流实现转PDF，调用save方法。
String excelPath = &amp;#34;E://example.xlsx&amp;#34;; String wordPath = &amp;#34;E://example.doc&amp;#34;; String pdfPath = &amp;#34;E://example.pdf&amp;#34;; try { FileInputStream fileInputStream = null; FileOutputStream fileOutputStream = null; //excel文件 	File excelFile = new File(excelPath); if (excelFile.exists()) { fileInputStream = new FileInputStream(excelFile); Workbook workbook = new Workbook(fileInputStream); File pdfFile = new File(pdfPath); fileOutputStream = new FileOutputStream(pdfFile); ////////excel 转 PDF方法 	workbook.save(fileOutputStream, SaveFormat.PDF); /////// word 转 PDF方法 	Document doc = new Document(wordPath ); doc.</description>
    </item>
    
    <item>
      <title>Java读取excel</title>
      <link>http://balaramadurai.github.io/blog/01-java-excel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/01-java-excel/</guid>
      <description>JAVA 实现批量读取excel文件，将文件中的内容写入到数据库。
 ​	最近有个需求是做个数据导入的接口，对方入到进来若干个excel文档，每个文档对应数据库中不同表的内容。数据格式：INFO文件中存放若10张excel文档，文档名称格式为表名-描述（如user-用户表.xls）。
下面将这个过程记录下来，方便之后的查看。
第一步、定义一个Map，用于存放excel文件中所有列的信息。 以user表为例，存放其中字段的信息，代码如下，仅供参考。
private Map&amp;lt;String, Object&amp;gt; getExcelFileType() { Map&amp;lt;String, Object&amp;gt; Map = new HashMap&amp;lt;String, Object&amp;gt;(); JSONObject jsonData = new JSONObject(); jsonData.put(&amp;#34;name&amp;#34;, &amp;#34;Str&amp;#34;); //不同类型的数据 	jsonData.put(&amp;#34;date&amp;#34;, &amp;#34;DateTime&amp;#34;); Map.put(&amp;#34;user&amp;#34;, jsonData); return Map; } 第二步、 日志设置  数据处理过程中需要记录日志信息。这里使用的是 java.util.logging，配置相关的设置，可以将程序中的导入情况输出到日志中，方便查看。代码如下，仅供参考。
Logger log = Logger.getLogger(&amp;#34;tesglog&amp;#34;); //日志 //设置日志的级别 log.setLevel(Level.ALL); //设置日志存放的路径 FileHandler fileHandler = new FileHandler(&amp;#34;D:\import.log&amp;#34;); fileHandler.setLevel(Level.ALL); fileHandler.setFormatter(new LogFormatter()); log.addHandler(fileHandler); } 程序执行中会将相应的信息写入到指定的out文件中，程序执行后，可以查看执行的结果信息。
第三步 读取文件夹内容 思路： 1、读取文件夹，遍历其中的excel文件，获取文件名称 2、定义两个变量sqlcolumn 和sqlvalue，分别用于存放拼接的列和值的信息。 3、按行遍历excel文件内容， 第二行开始，对每个单元格进行读取，根据是否有值来进行拼接插入的字符串。 4、运用jdbcOperations来执行拼接的sql语句，实现数据的入库。 程序实现的代码如下所示，仅供参考。</description>
    </item>
    
    <item>
      <title>Java读取excel</title>
      <link>http://balaramadurai.github.io/post/01-java-excel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/post/01-java-excel/</guid>
      <description>JAVA 实现批量读取excel文件，将文件中的内容写入到数据库。
 ​	最近有个需求是做个数据导入的接口，对方入到进来若干个excel文档，每个文档对应数据库中不同表的内容。数据格式：INFO文件中存放若10张excel文档，文档名称格式为表名-描述（如user-用户表.xls）。
下面将这个过程记录下来，方便之后的查看。
第一步、定义一个Map，用于存放excel文件中所有列的信息。 以user表为例，存放其中字段的信息，代码如下，仅供参考。
private Map&amp;lt;String, Object&amp;gt; getExcelFileType() { Map&amp;lt;String, Object&amp;gt; Map = new HashMap&amp;lt;String, Object&amp;gt;(); JSONObject jsonData = new JSONObject(); jsonData.put(&amp;#34;name&amp;#34;, &amp;#34;Str&amp;#34;); //不同类型的数据 	jsonData.put(&amp;#34;date&amp;#34;, &amp;#34;DateTime&amp;#34;); Map.put(&amp;#34;user&amp;#34;, jsonData); return Map; } 第二步、 日志设置  数据处理过程中需要记录日志信息。这里使用的是 java.util.logging，配置相关的设置，可以将程序中的导入情况输出到日志中，方便查看。代码如下，仅供参考。
Logger log = Logger.getLogger(&amp;#34;tesglog&amp;#34;); //日志 //设置日志的级别 log.setLevel(Level.ALL); //设置日志存放的路径 FileHandler fileHandler = new FileHandler(&amp;#34;D:\import.log&amp;#34;); fileHandler.setLevel(Level.ALL); fileHandler.setFormatter(new LogFormatter()); log.addHandler(fileHandler); } 程序执行中会将相应的信息写入到指定的out文件中，程序执行后，可以查看执行的结果信息。
第三步 读取文件夹内容 思路： 1、读取文件夹，遍历其中的excel文件，获取文件名称 2、定义两个变量sqlcolumn 和sqlvalue，分别用于存放拼接的列和值的信息。 3、按行遍历excel文件内容， 第二行开始，对每个单元格进行读取，根据是否有值来进行拼接插入的字符串。 4、运用jdbcOperations来执行拼接的sql语句，实现数据的入库。 程序实现的代码如下所示，仅供参考。</description>
    </item>
    
    <item>
      <title>java项目部署</title>
      <link>http://balaramadurai.github.io/blog/02-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/02-java/</guid>
      <description>Java 项目如何部署到centos服务器上，需要经过那几个步骤呢？
 ​	最近需要自己去服务器上部署程序，学习了一下部署的流程，主要接触的是Java方面的项目，记录下来，方便之后的备查。 首先是工具准备： 远程连接工具：xshell 6 远程文件传输工具：winscp 连接上服务器，在上面部署程序主要经过以下几个步骤：
第一步：数据备份与更新  为防止发布的程序无法正常使用，首先对之前的项目（java包）进行备份，即使发布不成功，也可快速回退上一个版本。 运用winscp工具连接上远程的服务器，找到项目发布的路径，先替换后更新Java包文件。工具连接的页面如下图所示： 第二步：连接服务器 　运用xshell连接到服务器，连接成功后，查看当前运行的Java进程，命令如下：
// 查看运行的Java进程 ps -ef|grep java  知识点学习 ps命令 process Status 将某个进程显示出来，列出系统中当前运行的进程 -A 显示所有程序。 -e 此参数的效果和指定&amp;quot;A&amp;quot;参数相同。 -f 显示UID,PPIP,C与STIME栏位。 grep Global Regular Exception Print 全局正则表达式版本，权限为所有用户，查找 强大的文本检索工具，使用正则表达式搜索文本，并把匹配的行打印出来。 | 管道命令 ps命令与grep同时执行
 执行命令后返回以下信息：
//ps -ef|grep java命令查询的结果 UID PID PPID C STIME TTY TIME CMD ww 14200 12563 0 00:20 pts/0 00:00:00 grep  知识点学习 UID ：程序被该 UID 所拥有 PID ：就是这个程序的 ID PPID ：则是其上级父程序的ID C ：CPU使用的资源百分比 STIME ：系统启动时间 TTY ：登入者的终端机位置 TIME ：使用掉的CPU时间。 CMD ：所下达的是什么指令</description>
    </item>
    
    <item>
      <title>kettle 数据库迁移</title>
      <link>http://balaramadurai.github.io/blog/03-kettle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/03-kettle/</guid>
      <description>最近需要oracle数据库迁移数据到mysql数据库，用到了kettle spoon 工具，发现工具真的是很强大，好用，单表，多表都可以迁移，下面给大家分享一下使用的过程情况，仅供参考。
 kettle spoon是Java语言编写，以图形化的界面来管理数据，并允许在不同数据库间迁移数据。 spoon软件解压后可直接运行，会自动检查Java环境，因此需要提前配置好环境。
 工具介绍 本机的运行环境： JDK版本： 1.8 spoon版本：pdi-ce-8.2.0 软件的运行需要添加Java的数据库驱动包，在软件lib文件夹下，添加数据库驱动。 mysql-connector-java-5.0.8-bin.jar ojdbc6.jar 打开解压后的文件夹，找到并打开spoon.bat，进入spoon软件的界面。如下图所示。 双击转换，可以新建一个转换，设置操作数据库的控件。首先需要做以下两步。
第一步 新建DB连接 　DB连接右击，新建DB连接，以当前的需求为例，需要分别建立oracle和mysql两个数据库的连接。 第二步 数据库连接 　配置数据库的连接信息，数据库名称，账号，密码等，可以测试连接是否成功。下面是oracle数据库的连接。 改变编码方式（重要） 更改目标数据的编码方式，统一为utf8编码方式，否则会出现乱码。mysql数据库的连接的选项里，添加characterEncoding 设置编码方式为utf8。 数据的迁移可以分为单表的迁移和多表的迁移，两者的处理过程不同，下面将分别介绍。
1 单表迁移 　在核心对象，输入下找到表输入，拖动到工作区，同样在输出下，找到表输出，拖动到工作区。在表输入控件右键，按住shift键添加表输入到表输出的传输线。 双击表输入，设置相关的参数。选择数据库连接，这里源数据库是oracle，下面是SQL查询语句，如迁移A1表的数据。 在输出表控件上双击，设置参数，数据库连接，这里是mysql数据库，点击浏览并选择需要迁移的目标表a1。 点击三角符号&amp;ndash;运行，弹出执行转换的窗口，默认设置，直接点击run，就开始数据的迁移。 下一步提示，文件已经改变，是否保存？选择是，并当前的作业保存在指定的区域。 程序运行，在控制台可以看到打印的日志信息 打开mysql数据库，双击查看对应的表，可以发现数据已经迁移过来了，这里需要注意的是设置数据库的编码方式。 2 多表迁移 单表的数据迁移比较简单，对多张表的批量迁移，需要将需要处理的数据库的表名存储到文件中，如data.txt，注意：一个表名一行，不要有空格。需要在第一行为其起一个别名，如ORCLDATA。 多表数据的批量迁移主要有三个步骤，分别如下所示：
（1）数据输入 在输入选项中添加文本文件输入控件，作业选项中添加复制记录到结果控件。本步骤的作用是从文本中读取表的信息，复制到结果集中。 双击文本文件输入，设计相关参数。浏览方式选中文本文件，并添加到当前的目录下，如下图所示。 在字段标签下，添加文本文件中起的别名ORCLDATA，数据类型为String，点击确定即可。 最后将其保存为数据输入.ktr，ktr是kettle的格式文件，可以用spoon直接打开，方便之后的操作。
（2）数据转换 　在表输出选项中分别添加从结果获取记录控件，设置变量控件，再次添加表输入控件和表输出控件，并用数据传输线进行连接，结果如下图所示。 双击从结果获取记录控件，设置字段名称，类型等参数。字段名称填写别名ORCLDATA,类型选择String类型。参考如下图所示。 双击设置变量，设置字段名称，变量名，变量活动类型，这里将字段名称和变量名设置为一样，也可以不同，变量活动类型选择vaild in the parent job，点击确定。 双击表输入，设置参数。选择源数据库，SQL语句，这里是oracle数据库，SQL语句需要填入参数形式的变量名。 同样，双击表输出，设置参数属性。选择目标数据库，目标表使用变量${别名}，提交记录数量，就是每次处理多少条数据。勾选使用批量插入。 最后将当前设置保存为数据转换.ktr，ktr是kettle的格式文件，可以用spoon直接打开。
（３）执行脚本 在核心对象下，通用选项下，分别添加Start控件，转换控件1，转换控件2和成功控件，并用传输线连接，结果如下。 双击转换1，选择执行文件的路径，这里需要选择的是数据输入.ktr文件，自动生成文件相对的路径。设置结果参考下图。 同样设置转换1的参数，选中数据转换.ktr文件，结果如下图所示。 注意还需要设置命名参数，并勾选两个设置，复制上一步结果到命名参数，将所有参数值传递到子转换，命名参数和流列名都设置为了ORCLDATA。结果如下图所示。 完成以上的设置，最后，点击run开始执行数据迁移，根据表中数据的多少决定其执行的快慢，可到数据库中查看数据的导入情况。 注：执行过程中，可能会出现问题，如表结构的字段设置不够，可根据实际的需要调整。若执行出现问题可在下面留言。
博客参考： https://blog.csdn.net/wuzhangweiss/article/details/78408029</description>
    </item>
    
    <item>
      <title>linux部署nginx</title>
      <link>http://balaramadurai.github.io/blog/05-nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/05-nginx/</guid>
      <description>nginx 是一款轻量级的Web服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，在BSD-like 协议下发行，占有内存少，并发能力强。
 最近需要学习一下nginx的知识，首先是安装配置环境，这里记录一下，方便以后的查看。 本次是在linux的虚拟机（RedHat Linux7）上配置安装nginx服务，在本机上访问和测试。
第一步、软件下载 　首先登录nginx的网站，下载所需要的安装文件。这里下载的版本是：nginx-1.6.2.tar.gz ，下载后的文件放到了usr/software下。软件的下载地址：http://nginx.org/en/download.html第二步、安装依赖 　在nginx安装之前需要提前安装相关的依赖，如prec、zlib，输入以下命令，根据提示安装即可。
&amp;gt;&amp;gt; yum install pcre &amp;gt;&amp;gt; yum install pcre-devel &amp;gt;&amp;gt; yum install zlib &amp;gt;&amp;gt; yum install zlib-devel 第三步、解压软件 &amp;gt;&amp;gt; tar -zxvf nginx-1.6.2.tar.gz 第四步、配置文件 首先进入到解压的文件夹下，配置nginx的信息，执行以下命令后会在nginx文件夹下生成四个文件：sbin，html，conf 和 log，存放不同的信息。
&amp;gt;&amp;gt; cd nginx-1.6 &amp;amp;&amp;amp;./configure --prefix=/usr/software/ngnix  –prefix选项 就是配置安装的路径，将文件配置到指定的路径下，方便管理。
 在启动的过程中如果报错： linux下安装nginx运行时提示C compiler gcc is not found 解决方案：yum -y install gcc gcc-c++ autoconf automake libtool make install zlib zlib-devel openssl openssl-devel pcre pcre-devel</description>
    </item>
    
    <item>
      <title>mysql到sqlite数据传输</title>
      <link>http://balaramadurai.github.io/blog/04-mysql-sqlite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/04-mysql-sqlite/</guid>
      <description>mysql和sqlite 是两种常用的数据库，在日常使用中也是需要进行数据的交换。
 在实际的工作中需要将mysql数据库表中的数据同步到sqlite对应的表中，主要有两种方法。第一种是使用Navicat里的数据传输，第二种是使用程序来实现。
第一种、程序实现 1、添加sqlite驱动 本项目是通过maven管理，在pom.xml中添加sqlite的驱动包依赖。
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.xerial&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;sqlite-jdbc&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.19.3&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 2、复制模板文件 运用FileUtils来复制模板pad.db文件
String padPath = &amp;#39;D:\\pad.db&amp;#39;; FileUtils.copyDirectory(new File(padPath),new File(&amp;#34;c:\\pad.db&amp;#34;); 3、建立sqlite连接 从mysql数据库中查询出拼接的字段，传输到sqlite数据库对应的表中。
//建立连接 Class.forName(&amp;#34;org.sqlite.JDBC&amp;#34;); Connection c = DriverManager.getConnection(&amp;#34;jdbc:sqlite:padPath&amp;#34; ); //设置为非自动提交 c.setAutoCommit(false); //创建连接对象 Statement stmt = c.createStatement(); padSql = &amp;#34;SELECT * FROM user&amp;#34;; //查询mysql数据库中数据 padList = this.jdbcOperations.queryForList(padSql); for (int i = 0; i &amp;lt; padList.size(); i++) { map = padList.get(i); sb = new StringBuilder(); sb.append(&amp;#34;INSERT INTO user(&amp;#34;); sb.append(&amp;#34;`id`, `name`, `sex`, `address`&amp;#34;); sb.</description>
    </item>
    
    <item>
      <title>oracle备份</title>
      <link>http://balaramadurai.github.io/blog/06-oracle-back/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/06-oracle-back/</guid>
      <description>oracle 是一种重要的关系型数据库，日常工作中需要对其进行备份和恢复。
 ​	在日常开发中，需要及时对数据库进行备份和还原，以oracle为例，两种数据库的恢复和还原的方法，主要有 impdp 和 imp 两种方式：
第一种 imp 和 exp 1、 创建表空间
create tablespace DATA logging datafile &amp;#39;D:\oracle\product\11.2.0\dbhome_1\oradata\DATA.dbf&amp;#39; size 50m autoextend on next 50m extent management local; 2、创建临时表空间
create temporary tablespace TEMP tempfile &amp;#39;D:\oracle\product\11.2.0\dbhome_1\oradata\GMISTEMP.dbf&amp;#39; size 50m autoextend on next 50m extent management local; 3、创建用户 创建用户：gzgl ，密码：gzgl ，默认工作空间：DATA
create user gzgl identified by gzgl default tablespace DATA temporary tablespace TEMP; 4、授权
//将连接、资源和dba的权限给用户 grant connect,resource,dba to gzgl ; //将创建表的权限分配给用户 grant create any table to gzgl ; 数据库的导入 在windows的cmd窗口下执行数据导入命令</description>
    </item>
    
    <item>
      <title>oracle存储过程</title>
      <link>http://balaramadurai.github.io/blog/07-oracle-mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/07-oracle-mysql/</guid>
      <description>存储过程 是在大型数据库系统中，一组为了完成特定功能的SQL 语句集，它存储在数据库中，一次编译后永久有效，用户通过指定存储过程的名字并给出参数（如果该存储过程带有参数）来执行它。
 ​	最近有个需求是将oracle版本的存储过程转换为mysql版本的存储过程，专门查询了两种数据库存储过程的差别，这里记录下来，方便之后的查看。
oracle版本 从user表中查询出name的值，更新到新表new_user 对应的字段。
//创建存储过程 CREATE OR REPLACE PROCEDURE newdata AS BEGIN declare //定义变量  str_1 varchar2(4000); begin //循环遍历  for row_aaa in (select id from new_user t ) loop //初始化  str_1:=&amp;#39;&amp;#39;; BEGIN //buffer不受限制	DBMS_OUTPUT.ENABLE(buffer_size =&amp;gt; null); //执行查询语句 select kk into str_1 from (select name ||&amp;#39;&amp;#39; KK from( select name as name from user where id = new_id ) WHERE ROWNUM &amp;lt; 2 ); //打印输出结果 	dbms_output.</description>
    </item>
    
    <item>
      <title>oracle局域网共享</title>
      <link>http://balaramadurai.github.io/blog/08-oracle-share/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/08-oracle-share/</guid>
      <description>oracle 是性能较好的数据库，如何让其他电脑在局域网下访问同一台机器上的数据库呢？
 ​	最近需要解决的问题：同一局域网下，想让其他计算机访问本地计算机上的oracle数据库。需要更改oracle数据库的某些配置信息，来实现共享。Oracle数据库配置文件位置：oracle\product\11.2.0\dbhome_1\NETWORK\ADMIN 本地数据库的共享通过三步操作来完成，下面是三个步骤的操作。 第一步：更改本地的 tnsnames.ora配置文件，添加本地IP地址。
// 添加一条本地IP的描述，HOST填充本机的IP地址 ORCL = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.0.104)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = orcl) ) ) 第二步：更改监听listener.ora配置文件，添加本地监听。 主要有两种方法，第一种，打开Net Manager程序，添加监听程序。展开本地，监听程序，在编辑&amp;ndash;新建监听程序，在右侧的面板中，输入本机的IP地址，端口号默认是1521，保存即可。 第二种方法，直接在listener.ora配置文件里更改，即复制了一份DESCRIPTION代码，HOST填充本机的IP添加上去，即添加监听程序。
//添加监听程序的配置信息 LISTENER = (DESCRIPTION_LIST = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.0.104)(PORT = 1521)) ) ) 第三步：重启一下Oracle数据服务（实例和监听服务TNSListener）。局域网下，其他计算机测试一下连接是否成功。 博客参考： 【1】https://blog.csdn.net/lone_druid/article/details/74175708</description>
    </item>
    
    <item>
      <title>oracle数据库空表处理</title>
      <link>http://balaramadurai.github.io/blog/16-emptytable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/16-emptytable/</guid>
      <description>ExtTree 树是一种比较紧密的数据类型，上下级节点之间具有联系。
 最近在oracle数据库还原时，出现好多表没有导入成功，这是因为什么呢，网上查阅资料，导库前需要进行数据库的空表处理。这里记录下来，方便备查。
数据库版本：oracle 11g
第一步、设置 延迟段创建 deferred_segment_creation 延迟段创建(Oracle 11g的新特性)
alter system set deferred_segment_creation=false;  设置为 true，即创建一个表时，不分配空间，只有插入第一条数据时才分配空间。 优点：加快建表速度，节约空间 缺点：export导出是不会导出空表
 第二步、查询当前用户下所有空表 Select &amp;#39;alter table &amp;#39;||table_name||&amp;#39; allocate extent;&amp;#39; from user_tables where num_rows=0 or num_rows is null; 执行SQL后，会生成若干可执行的语句，即空表的更改语句 修改表extent。如下图所示 第三步、执行生成的语句 生成出来的语句就是空表的压缩空间的语句，复制出来执行即可！
第四步、执行数据库导出的脚本 创建用户：gzgl ，密码：gzgl ，默认工作空间：DATA
在windows的cmd窗口下执行数据导入命令
imp gzgl/gzgl @orcl full=y file=D:/20191231.dmp log=D:/20191231.dmp.log 空表处理后，数据库的导入就会好很多。
博客来源： 【1】https://www.cnblogs.com/guazixing/p/7600327.html</description>
    </item>
    
    <item>
      <title>oracle迁移到mysql</title>
      <link>http://balaramadurai.github.io/blog/17-createoracle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/17-createoracle/</guid>
      <description>oracle和mysql 作为常用的数据库，在实际生产中，两种数据库都具有很广的应用场景。
 最近项目使用的数据库需要从oracle转到mysql，开始了程序的迁移，项目用Java开发，主要需要更改的是mybatis的xml文件中的SQL语句。这里记录下来方便以后查看。
一、创建脚本 1、oracle 以学生表TABLE_NAME 为例，列出几个两者之间的不同。以下是oracle数据库创建脚本
//判断表是否存在，存在则删除 DECLARE num NUMBER ; BEGIN SELECT COUNT (1) INTO num FROM user_tables WHERE TABLE_NAME = &amp;#39;STUDENT&amp;#39; ; IF num = 1 THEN EXECUTE IMMEDIATE &amp;#39;drop table STUDENT cascade constraints&amp;#39; ; END IF ; END ; / //创建表语句 CREATE TABLE STUDENT (	ID VARCHAR2(36), NAME VARCHAR2(50), AGE NUMBER, SEX VARCHAR2(10) ); //添加注释 comment on table STUDENT is &amp;#39;学生表&amp;#39;; comment on column STUDENT.</description>
    </item>
    
    <item>
      <title>PowderDesigner连接数据库</title>
      <link>http://balaramadurai.github.io/blog/10-powderdesigner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/10-powderdesigner/</guid>
      <description>PowerDesigner 采用模型驱动方法，将业务与IT结合起来，可帮助部署有效的企业体系架构，并为研发生命周期管理提供强大的分析与设计技术。
 ​ 最近有个需求是画数据库各表结构的关联关系，而本地数据库有相应的表，为了在软件中获取对应的表结构。网上查询两种方式：第一种是将直接将PowderDesigner和数据库相连，导入进去，生成对应的结构。第二种是从excel文档中导入到软件中，每操作一次都需改excel文件中的内容。这里采用第一种方式，记录下来，方便之后的查看。
环境准备 软件：PowerDesigner 15.6 32位jdk：jdk-8u144-windows-i586 驱动包：mysql-connector-java-8.0.18.jar
第一步、软件安装 1、安装PowerDesigner软件，这里不再说具体安装的过程，基本上都是下一步，一直到最后，具体步骤可以网上查询，或者在博客参考【1】。 2、安装32位jdk。经过网上查看资料和试验发现，连接驱动需要用到的是32位的jdk，这里需要提前进行安装，并将mysql的驱动包放到jdk安装目录bin中。
第二步、新建PM文件 打开软件，点击新建，选择类型，新建PM文件，物理数据模型，可参考下图 第三步、连接信息设置 点击文件file &amp;ndash;&amp;gt; 反转引擎reverse Engineer &amp;ndash;&amp;gt; 数据库Database，配置相应的模型连接信息。 根据数据库类型选择相应的项，这里选择是mysql 5.0 点击configure，设置数据库的连接信息 点击小手，添加配置的连接的详细信息 具体设置信息可以参考以下。设置连接的名称，默认连接文件放的位置，数据库的用户名等信息。 注意：1、选择连接的类型为JDBC；2、DBMS类型为mysql；3、驱动包需要放到jdk的bin目录，并选中。 输入数据库的密码，点击连接。 第四步、导入数据库信息 选择连接的数据库信息，点击数据库&amp;ndash;&amp;gt; 更新数据库模型，如下图所示。 选择建立的连接，这里是mytest.dcp，注意勾选下面的复选框。 点击确定后，展示出来连接上的所有数据库，选择对应的数据库，可以看到库中所有的表，如下图所示。选择一张表，点击确定，就可以开始方向工程的操作，如下图所示。 等待进度条完成，就可以看到工作空间中添加成功该表的信息，如下图所示。 这样就完成了PowerDesigner与mysql数据库的连接，直接选中表可以自动反向生成相应的工程表信息。
错误的情况及处理 1、连接报错 控制台错误信息：
SQLSTATE = 01S00 The server time zone value &amp;#39;�й���׼ʱ��&amp;#39; is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.</description>
    </item>
    
    <item>
      <title>print page</title>
      <link>http://balaramadurai.github.io/blog/09-page-print/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/09-page-print/</guid>
      <description>页面打印 是将页面特定区域的内容作为输出，主要有两种方式：添加打印代码和借助控件实现打印
 第一种方式、添加代码打印 　添加代码打印就是在需要打印的代码出添加相应的代码实现打印的效果。主要分为三步来完成。 第一步在head头部添加打印的配置信息。根据需求修改，参考代码如下：
// 头部添加打印的信息 &amp;lt;script language=&amp;#34;javascript&amp;#34;&amp;gt; function preview(oper){ //oper表示打印的区域数  if (oper &amp;lt; 10){ bdhtml=window.document.body.innerHTML; //获取当前页的html代码  sprnstr=&amp;#34;&amp;lt;!--startprint&amp;#34;+oper+&amp;#34;--&amp;gt;&amp;#34;; //设置打印开始区  eprnstr=&amp;#34;&amp;lt;!--endprint&amp;#34;+oper+&amp;#34;--&amp;gt;&amp;#34;; //设置打印结束区  prnhtml=bdhtml.substring(bdhtml.indexOf(sprnstr)+18); //从开始代码向后取html  prnhtml=prnhtml.substring(0,prnhtml.indexOf(eprnstr));//从结束代码向前取html  window.document.body.innerHTML=prnhtml; window.print(); //调用window的打印功能  window.document.body.innerHTML=bdhtml; } else { window.print(); } } &amp;lt;/script&amp;gt; 第二步，确定打印区域，用startprint1和endprint1来标识位置。
// 选择需要打印的div &amp;lt;!--startprint1--&amp;gt; // &amp;lt;!--打印内容开始--&amp;gt; &amp;lt;div &amp;gt; ******打印代码区******** &amp;lt;/div&amp;gt; &amp;lt;!--打印内容结束--&amp;gt; &amp;lt;!--endprint1--&amp;gt; 第三步，打印的按钮，preview()里面参数表示可以打印的次数，这里可以设置为1。这样可以查看页面的打印效果。
// 表示buffer不受限制 &amp;lt;input type=button name=&amp;#39;button_export&amp;#39; value=&amp;#39;打印&amp;#39; onclick=preview(1) &amp;gt; //1表示只在一个区域使用 第二种方式、控件打印页面 　利用jQuery的jqprint控件实现页面的打印，首先需要下载插件，地址可参考：http://www.</description>
    </item>
    
    <item>
      <title>putty连接数据库</title>
      <link>http://balaramadurai.github.io/blog/11-putty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/11-putty/</guid>
      <description>PuTTY 是一个Telnet、SSH、rlogin、纯TCP以及串行接口连接软件，免费的、Windows x86平台下的Telnet、SSH和rlogin客户端。
  目前需求是通过ssh连接linux上的mysql数据库，实现利用kettle来同步数据。由于无法利用Navicat直接连接，这里选用putty软件来进行ssh的连接，从而管理linux。
第一步、软件准备  首先到官网上下载putty软件，下载地址：https://www.putty.org/。 下面选择的是64bit版本安装。
第二步、安装  软件的安装比较常规，选择安装路径，一路next，到最后完成即可，这里不再细说。 第三步、配置连接 1、配置域名端口  软件安装成功后，点击左侧，SSH&amp;ndash;Tunnels，配置连接域名端口等信息，Source port输入自定义的端口，最好使用未被占用的端口，Destination输入域名+端口号信息，点击Add，则会在蓝色方框内显示配置的信息。 注意：不要忘记输入端口号。否则就会报错：You need to specify a destiation adress in the form &amp;ldquo;host.name:port&amp;rdquo; 2、配置连接数  左侧树，点击Connection，设置允许连接数，根据实际需要填写。这里设置的连接数是3，勾选允许TCP连接的选项。 3、设置主机连接  左侧树，点击Sessions，在Host Name 输入主机名或IP地址，默认的端口，在Save Sessions输入别名，保存配置信息，方便下次的使用。点击open即可登录页面。 输入账号和密码，即可建立ssh连接，管理linux。注意不要关闭窗口。 4、设置主机连接  配置kettle连接（可参考博客1）：主机名称可以填写localhost或者127.0.0.1，端口号填写第一步中自定义的端口，数据库账号和密码根据实际情况填写。 通过以上四步，就可以实现kettle连接linux上的mysql数据库。
博客参考： 【1】https://blog.csdn.net/u012190388/article/details/86679856 【2】https://jingyan.baidu.com/article/d5a880ebab3f3113f147cc00.html</description>
    </item>
    
    <item>
      <title>可重复执行的脚本</title>
      <link>http://balaramadurai.github.io/blog/12-oracle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://balaramadurai.github.io/blog/12-oracle/</guid>
      <description>数据库脚本 是包含不属于数据库架构定义的Transact-SQL(T-SQL)语句或实用工具（如 SQLCMD）的附加文件。可以将数据库脚本用作部署步骤的一部分（预先部署和后期部署脚本），数据库脚本也可以是存储在数据库项目中的常规管理脚本。。
 在家办公的情况下，每位项目成员都在自己本地数据库操作，如何保持数据一致性，让小伙伴能正常使用你的功能，可重复执行的脚本就重要了。这里使用的是存储过程，记录下来，方便备查。
1、创建表 在创建脚本方面，oracle与mysql语法上有所区别。以新建人员表为例，下面是两种数据库的建库脚本。 oracle 建数据表脚本
//**建表之前进行判断** DECLARE num NUMBER ; BEGIN SELECT COUNT (1) INTO num FROM user_tables WHERE TABLE_NAME = &amp;#39;user&amp;#39; ; IF num = 1 THEN //判断是否存在  EXECUTE IMMEDIATE &amp;#39;drop table user cascade constraints&amp;#39; ; END IF; END; / create table user ( id VARCHAR2(36) not null, sex VARCHAR2(2), name VARCHAR2(100), age NUMBER, constraint PK_user primary key (id) ); comment on table user is &amp;#39;人员表&amp;#39;; COMMENT ON COLUMN user.</description>
    </item>
    
  </channel>
</rss>