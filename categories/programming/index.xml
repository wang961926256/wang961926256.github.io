<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on 梦幻通灵的博客</title>
    <link>https://www.flysnow.org/categories/programming/</link>
    <description>Recent content in programming on 梦幻通灵的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 17 Sep 2015 13:47:08 +0200</lastBuildDate>
    
	<atom:link href="https://www.flysnow.org/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go is for lovers</title>
      <link>https://www.flysnow.org/post/go-is-for-lovers/</link>
      <pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate>
      
      <guid>https://www.flysnow.org/post/go-is-for-lovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates. The go docs provide more details.
Introduction to Go Templates Go templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer. One consequence of this simplicity is that go templates parse very quickly.
A unique characteristic of go templates is they are content aware. Variables and content will be sanitized depending on the context of where they are used.</description>
    </item>
    
    <item>
      <title>ext-button</title>
      <link>https://www.flysnow.org/post/19-ext-button/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.flysnow.org/post/19-ext-button/</guid>
      <description>ext button 按钮是页面常用的控件，利用ext的自带的按钮可以直接引用。 最近在使用Ext按钮样式的风格，发现其提供了几种按钮样式的写法，显示效果也会有一定的差别，下面记录下来，方便之后的查看。 1、创建按钮 &amp;ndash; button Ext 可以直接创建单个的按钮对象，设置按钮的名称，大小，宽度等属性，属性的参数直接写在</description>
    </item>
    
  </channel>
</rss>